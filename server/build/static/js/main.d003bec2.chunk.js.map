{"version":3,"sources":["components/Header/style.js","components/Header/index.js","components/PostList/Post/style.js","redux/actions/index.js","components/PostList/Post/index.js","redux/selectors/index.js","components/PostList/index.js","pages/styles.js","components/CreatePostModal/style.js","components/CreatePostModal/index.js","pages/HomePage.js","App.js","reportWebVitals.js","apis/index.js","redux/sagas/index.js","constants.js","redux/reducers/index.js","redux/reducers/posts.js","redux/reducers/modal.js","index.js"],"names":["makeStyles","theme","container","backgroundColor","palette","primary","main","color","marginBottom","fontWeight","padding","Header","classes","useStyles","Typography","variant","align","className","media","height","getType","reduxAction","type","getPosts","createActions","getPostsRequest","undefined","getPostsSuccess","payload","getPostsFailure","err","createPost","createPostRequest","createPostSuccess","createPostFailure","updatePost","updatePostRequest","updatePostSuccess","updatePostFailure","showModal","createAction","hideModal","Post","post","dispatch","useDispatch","onLikeButtonClick","useCallback","likeCount","Card","CardHeader","avatar","Avatar","title","author","subheader","moment","updatedAt","format","action","IconButton","CardMedia","image","attachment","CardContent","component","content","CardActions","onClick","postsState$","state","posts","data","modalState$","modal","PostList","useSelector","console","log","useEffect","actions","Grid","spacing","alignItems","map","item","xs","sm","_id","fab","position","bottom","right","paper","top","left","transform","width","background","boxShadow","shadows","form","display","flexDirection","header","margin","textarea","footer","marginTop","CreatePostModal","useState","setData","isShow","onClose","onSubmit","body","id","noValidate","autoComplete","TextField","required","label","value","onChange","e","target","TextareaAutosize","minRows","maxRows","placeholder","accept","multiple","onDone","base64","Button","fullWidth","Modal","open","HomePage","openCreatePostModal","Container","maxWidth","Fab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","URL","fetchPosts","axios","get","fetchPostsSaga","createPostSaga","updatePostSaga","mySaga","call","api","put","error","updatedPost","takeLatest","INIT_STATE","isLoading","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"gLAEeA,eAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACVC,gBAAiBF,EAAMG,QAAQC,QAAQC,KACvCC,MAAO,QACPC,aAAc,OACdC,WAAY,UACZC,QAAS,a,OCLI,SAASC,IACvB,IAAMC,EAAUC,IAChB,OACC,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,UAAWL,EAAQV,UAA3D,kB,uICJaF,eAAW,SAACC,GAAD,MAAY,CACrCiB,MAAO,CACNC,OAAQ,a,iBCFGC,EAAU,SAACC,GACvB,OAAOA,IAAcC,MAGTC,EAAWC,YAAc,CACrCC,qBAAiBC,EACjBC,gBAAiB,SAACC,GAAD,OAAaA,GAC9BC,gBAAiB,SAACC,GAAD,OAASA,KAGdC,EAAaP,YAAc,CACvCQ,kBAAmB,SAACJ,GAAD,OAAaA,GAChCK,kBAAmB,SAACL,GAAD,OAAaA,GAChCM,kBAAmB,SAACJ,GAAD,OAASA,KAGhBK,EAAaX,YAAc,CACvCY,kBAAmB,SAACR,GAAD,OAAaA,GAChCS,kBAAmB,SAACT,GAAD,OAAaA,GAChCU,kBAAmB,SAACR,GAAD,OAASA,KAGhBS,EAAYC,YAAa,0BACzBC,EAAYD,YAAa,0BCPvB,SAASE,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACxB/B,EAAUC,IACV+B,EAAWC,cACXC,EAAoBC,uBAAY,WACrCH,EACCT,EAAWC,kBAAX,2BAAkCO,GAAlC,IAAwCK,UAAWL,EAAKK,UAAY,QAEnE,CAACJ,EAAUD,IAEd,OACC,eAACM,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CACCC,OAAQ,cAACC,EAAA,EAAD,gBACRC,MAAOV,EAAKW,OACZC,UAAWC,IAAOb,EAAKc,WAAWC,OAAO,sBACzCC,OACC,cAACC,EAAA,EAAD,UACC,cAAC,IAAD,QAIH,cAACC,EAAA,EAAD,CACCC,MAAOnB,EAAKoB,WACZ9C,UAAWL,EAAQM,MACnBmC,MAAM,UAEP,eAACW,EAAA,EAAD,WACC,cAAClD,EAAA,EAAD,CAAYC,QAAQ,KAAKR,MAAM,cAA/B,SACEoC,EAAKU,QAEP,cAACvC,EAAA,EAAD,CAAYC,QAAQ,QAAQkD,UAAU,IAAI1D,MAAM,gBAAhD,SACEoC,EAAKuB,aAGR,cAACC,EAAA,EAAD,UACC,eAACP,EAAA,EAAD,WACC,cAAC,IAAD,CAAcQ,QAAStB,IACvB,cAAChC,EAAA,EAAD,CAAYmD,UAAU,OAAO1D,MAAM,gBAAnC,SACEoC,EAAKK,oBCxDL,IAAMqB,EAAc,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MACrCC,EAAc,SAACH,GAAD,OAAWA,EAAMI,OCM7B,SAASC,IACvB,IAAM/B,EAAWC,cACX0B,EAAQK,YAAYP,GAO1B,OANAQ,QAAQC,IAAI,6DAAoDP,GAEhEQ,qBAAU,WACTnC,EAASoC,EAAiBvD,qBACxB,CAACmB,IAGH,cAACqC,EAAA,EAAD,CAAM/E,WAAS,EAACgF,QAAS,EAAGC,WAAW,UAAvC,SACEZ,EAAMa,KAAI,SAACzC,GAAD,OACV,cAACsC,EAAA,EAAD,CAAqBI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAtC,SACC,cAAC7C,EAAD,CAAMC,KAAMA,KADFA,EAAK6C,U,qBCjBLxF,eAAW,SAACC,GAAD,MAAY,CACrCwF,IAAK,CACJC,SAAU,QACVC,OAAQ1F,EAAMiF,QAAQ,GACtBU,MAAO3F,EAAMiF,QAAQ,Q,4CCJRlF,eAAW,SAACC,GAAD,MAAY,CACrC4F,MAAO,CACNC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXN,SAAU,WACVO,MAAO,IACP9F,gBAAiBF,EAAMG,QAAQ8F,WAAWL,MAC1CM,UAAWlG,EAAMmG,QAAQ,GACzB1F,QAAST,EAAMiF,QAAQ,EAAG,EAAG,IAE9BmB,KAAM,CACLC,QAAS,OACTC,cAAe,UAEhBC,OAAQ,CACPC,OAAQ,cAETpD,MAAO,CACN7C,aAAc,QAEfkG,SAAU,CACThG,QAAS,OACTF,aAAc,QAEfmG,OAAQ,CACPC,UAAW,Y,iBCrBE,SAASC,IAAmB,IAAD,EACjBC,mBAAS,CAChCzD,MAAO,GACPa,QAAS,GACTH,WAAY,KAJ4B,mBAClCS,EADkC,KAC5BuC,EAD4B,KAMnCnG,EAAUC,IACRmG,EAAWpC,YAAYH,GAAvBuC,OACFpE,EAAWC,cAEXoE,EAAUlE,uBAAY,WAC3BH,EAASH,KACTsE,EAAQ,CACP1D,MAAO,GACPa,QAAS,GACTH,WAAY,OAEX,CAACnB,IAQEsE,EAAWnE,uBAAY,WAC5B8B,QAAQC,IAAI,4DAAmDN,GAC/D5B,EAASb,EAAWC,kBAAkBwC,MAGpC,CAACA,EAAM5B,IAEJuE,EACL,sBAAKlG,UAAWL,EAAQiF,MAAOuB,GAAG,qBAAlC,UACC,iDACA,uBAAMC,YAAU,EAACC,aAAa,MAAMrG,UAAWL,EAAQyF,KAAM1C,OAAO,GAApE,UACC,cAAC4D,EAAA,EAAD,CACCtG,UAAWL,EAAQyC,MACnBmE,UAAQ,EACRC,MAAM,QACNC,MAAOlD,EAAKnB,MACZsE,SAAU,SAACC,GAAD,OAAOb,EAAQ,2BAAKvC,GAAN,IAAYnB,MAAOuE,EAAEC,OAAOH,YAErD,cAACI,EAAA,EAAD,CACCC,QAAS,GACTC,QAAS,GACTC,YAAY,aACZP,MAAOlD,EAAKN,QACZyD,SAAU,SAACC,GAAD,OAAOb,EAAQ,2BAAKvC,GAAN,IAAYN,QAAS0D,EAAEC,OAAOH,YAEvD,cAAC,IAAD,CACCQ,OAAO,SACPC,UAAU,EACVC,OAAQ,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtB,EAAQ,2BAAKvC,GAAN,IAAYT,WAAYsE,QAExD,qBAAKpH,UAAWL,EAAQ+F,OAAxB,SACC,cAAC2B,EAAA,EAAD,CACCvH,QAAQ,YACRR,MAAM,UACN0D,UAAU,OACVsE,WAAS,EACTnE,QAAS8C,EALV,4BAcJ,OACC,8BACC,cAACsB,EAAA,EAAD,CAAOC,KAAMzB,EAAQC,QAASA,EAA9B,SACEE,MCvEU,SAASuB,KACvB,IAAM9H,EAAUC,IACV+B,EAAWC,cAEX8F,EAAsB5F,uBAAY,WACvCH,EAASL,OACP,CAACK,IAEJ,OACC,eAACgG,EAAA,EAAD,CAAWC,SAAS,KAAK5H,UAAU,GAAnC,UACC,cAACN,EAAD,IACA,cAACgE,EAAD,IACA,cAACkC,EAAD,IACA,cAACiC,EAAA,EAAD,CACCvI,MAAM,UACNU,UAAWL,EAAQ6E,IACnBrB,QAASuE,EAHV,SAKC,cAAC,IAAD,SCnBWI,OAJf,WACC,OAAO,cAACL,GAAD,KCOOM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mECLRQ,GAAM,wBAECC,GAAa,kBAAMC,KAAMC,IAAN,UAAaH,GAAb,YACnB1H,GAAa,SAACH,GAAD,OAAa+H,KAAMhH,KAAN,UAAc8G,GAAd,UAA2B7H,IACrDO,GAAa,SAACP,GAAD,OACzB+H,KAAMhH,KAAN,UAAc8G,GAAd,iBAAkC7H,I,aCHzBiI,I,aAcAC,I,aAWAC,I,aAWAC,IApCV,SAAUH,GAAelG,GAAzB,wEAEgB,OAFhB,kBAEsBsG,aAAKC,IAF3B,OAOE,OALM3F,EAFR,OAGEM,QAAQC,IACP,0EACAP,GALH,SAOQ4F,aAAInF,EAAiBrD,gBAAgB4C,EAAMC,OAPnD,8BAUE,OAVF,yBASEK,QAAQuF,MAAR,MATF,UAUQD,aAAInF,EAAiBnD,gBAAjB,OAVZ,sDAcA,SAAUiI,GAAenG,GAAzB,wEAEe,OAFf,kBAEqBsG,aAAKC,GAAgBvG,EAAO/B,SAFjD,OAGE,OADMe,EAFR,gBAGQwH,aAAInF,EAAmB/C,kBAAkBU,EAAK6B,OAHtD,OAIE,OAJF,SAIQ2F,aAAInF,KAJZ,+BAOE,OAPF,0BAMEH,QAAQuF,MAAR,MANF,UAOQD,aAAInF,EAAmB9C,kBAAnB,OAPZ,uDAWA,SAAU6H,GAAepG,GAAzB,wEAEsB,OAFtB,kBAE4BsG,aAAKC,GAAgBvG,EAAO/B,SAFxD,OAGE,OADMyI,EAFR,gBAGQF,aAAInF,EAAmB3C,kBAAkBgI,EAAY7F,OAH7D,OAIE,OAJF,SAIQ2F,aAAInF,KAJZ,+BAOE,OAPF,0BAMEH,QAAQuF,MAAR,MANF,UAOQD,aAAInF,EAAmB1C,kBAAnB,OAPZ,uDAWA,SAAU0H,KAAV,kEACC,OADD,SACOM,aAAWtF,EAAiBvD,gBAAiBoI,IADpD,OAEC,OAFD,SAEOS,aAAWtF,EAAmBhD,kBAAmB8H,IAFxD,OAGC,OAHD,SAGOQ,aAAWtF,EAAmB5C,kBAAmB2H,IAHxD,wCAMeC,U,SC9CFO,GAAa,CACzBhG,MAAO,CACNiG,WAAW,EACXhG,KAAM,IAEPE,MAAO,CACNsC,QAAQ,ICFKyD,oBAAgB,CAAElG,MCFlB,WAAyD,IAAnCD,EAAkC,uDAA1BiG,GAAWhG,MAAOZ,EAAQ,uCACtE,OAAQA,EAAOrC,MAEd,KAAKF,EAAQG,EAASE,iBACrB,OAAO,2BACH6C,GADJ,IAECkG,WAAW,IAEb,KAAKpJ,EAAQG,EAASI,iBAMtB,KAAKP,EAAQG,EAASM,iBACrB,OAAO,2BACHyC,GADJ,IAECkG,WAAW,EACXhG,KAAMb,EAAO/B,UAIf,KAAKR,EAAQW,EAAWE,mBACvB,OAAO,2BACHqC,GADJ,IAECE,KAAK,GAAD,oBAAMF,EAAME,MAAZ,CAAkBb,EAAO/B,YAI/B,KAAKR,EAAQe,EAAWE,mBACvB,OAAO,2BACHiC,GADJ,IAECE,KAAMF,EAAME,KAAKY,KAAI,SAACzC,GAAD,OACpBA,EAAK6C,MAAQ7B,EAAO/B,QAAQ4D,IAAM7B,EAAO/B,QAAUe,OAItD,QACC,OAAO2B,IDpC8BI,MEFzB,WAAyD,IAAnCJ,EAAkC,uDAA1BiG,GAAW7F,MAAOf,EAAQ,uCACtE,OAAQA,EAAOrC,MACd,KAAKF,EAAQmB,GACZ,OAAO,2BACH+B,GADJ,IAEC0C,QAAQ,IAEV,KAAK5F,EAAQqB,GACZ,OAAO,2BACH6B,GADJ,IAEC0C,QAAQ,IAGV,QACC,OAAO1C,MCNJoG,GAAiBC,eAEjBC,GAAQC,aAAYC,GAAUC,aAAgBL,KACpDA,GAAeM,IAAIhB,IAEnBiB,IAASC,OACR,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACC,cAAC,GAAD,MAEDO,SAASC,eAAe,SAMzBpC,O","file":"static/js/main.d003bec2.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\tcolor: \"white\",\r\n\t\tmarginBottom: \"20px\",\r\n\t\tfontWeight: \"lighter\",\r\n\t\tpadding: \"5px 0\",\r\n\t},\r\n}));\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./style\";\r\nexport default function Header() {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Typography variant=\"h4\" align=\"center\" className={classes.container}>\r\n\t\t\tBlog\r\n\t\t</Typography>\r\n\t);\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles((theme) => ({\r\n\tmedia: {\r\n\t\theight: \"150px\",\r\n\t},\r\n}));\r\n","import { createAction, createActions } from \"redux-actions\";\r\n\r\nexport const getType = (reduxAction) => {\r\n\treturn reduxAction().type;\r\n};\r\n\r\nexport const getPosts = createActions({\r\n\tgetPostsRequest: undefined,\r\n\tgetPostsSuccess: (payload) => payload,\r\n\tgetPostsFailure: (err) => err,\r\n});\r\n\r\nexport const createPost = createActions({\r\n\tcreatePostRequest: (payload) => payload,\r\n\tcreatePostSuccess: (payload) => payload,\r\n\tcreatePostFailure: (err) => err,\r\n});\r\n\r\nexport const updatePost = createActions({\r\n\tupdatePostRequest: (payload) => payload,\r\n\tupdatePostSuccess: (payload) => payload,\r\n\tupdatePostFailure: (err) => err,\r\n});\r\n\r\nexport const showModal = createAction(\"SHOW_CREATE_POST_MODAL\");\r\nexport const hideModal = createAction(\"HIDE_CREATE_POST_MODAL\");\r\n\r\n/**\r\n * with each create an object\r\n * =>\r\n * getType(getPosts.getPostsSuccess)\r\n *\r\n * {\r\n *    type: \"getPostsSuccess\"\r\n *    payload: {\r\n *      name: \"test\"\r\n *    }\r\n * }\r\n */\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n\tCard,\r\n\tAvatar,\r\n\tCardActions,\r\n\tCardContent,\r\n\tCardHeader,\r\n\tCardMedia,\r\n\tIconButton,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\n\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport moment from \"moment\";\r\nimport useStyles from \"./style\";\r\nimport { updatePost } from \"../../../redux/actions\";\r\nexport default function Post({ post }) {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\tconst onLikeButtonClick = useCallback(() => {\r\n\t\tdispatch(\r\n\t\t\tupdatePost.updatePostRequest({ ...post, likeCount: post.likeCount + 1 })\r\n\t\t);\r\n\t}, [dispatch, post]);\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<CardHeader\r\n\t\t\t\tavatar={<Avatar>A</Avatar>}\r\n\t\t\t\ttitle={post.author}\r\n\t\t\t\tsubheader={moment(post.updatedAt).format(\"HH:MM MMM DD, YYYY\")}\r\n\t\t\t\taction={\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<MoreVertIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t\t<CardMedia\r\n\t\t\t\timage={post.attachment}\r\n\t\t\t\tclassName={classes.media}\r\n\t\t\t\ttitle=\"Title\"\r\n\t\t\t/>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography variant=\"h5\" color=\"textPrimary\">\r\n\t\t\t\t\t{post.title}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n\t\t\t\t\t{post.content}\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions>\r\n\t\t\t\t<IconButton>\r\n\t\t\t\t\t<FavoriteIcon onClick={onLikeButtonClick} />\r\n\t\t\t\t\t<Typography component=\"span\" color=\"textSecondary\">\r\n\t\t\t\t\t\t{post.likeCount}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</IconButton>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n}\r\n","export const postsState$ = (state) => state.posts.data;\r\nexport const modalState$ = (state) => state.modal;\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Post from \"./Post\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport { postsState$ } from \"../../redux/selectors\";\r\n\r\nexport default function PostList() {\r\n\tconst dispatch = useDispatch();\r\n\tconst posts = useSelector(postsState$);\r\n\tconsole.log(\"🚀 ~ file: index.js ~ line 11 ~ PostList ~ posts\", posts);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(actions.getPosts.getPostsRequest());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={2} alignItems=\"stretch\">\r\n\t\t\t{posts.map((post) => (\r\n\t\t\t\t<Grid key={post._id} item xs={12} sm={6}>\r\n\t\t\t\t\t<Post post={post}></Post>\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\t\t</Grid>\r\n\t);\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles((theme) => ({\r\n\tfab: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: theme.spacing(2),\r\n\t\tright: theme.spacing(2),\r\n\t},\r\n}));\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\ttop: \"50%\",\r\n\t\tleft: \"50%\",\r\n\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\tposition: \"absolute\",\r\n\t\twidth: 400,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(2, 4, 3),\r\n\t},\r\n\tform: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t},\r\n\theader: {\r\n\t\tmargin: \"0 0 10px 0\",\r\n\t},\r\n\ttitle: {\r\n\t\tmarginBottom: \"10px\",\r\n\t},\r\n\ttextarea: {\r\n\t\tpadding: \"10px\",\r\n\t\tmarginBottom: \"10px\",\r\n\t},\r\n\tfooter: {\r\n\t\tmarginTop: \"10px\",\r\n\t},\r\n}));\r\n","import { Button, Modal, TextareaAutosize, TextField } from \"@material-ui/core\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { modalState$ } from \"../../redux/selectors\";\r\nimport useStyles from \"./style\";\r\nimport FileBase64 from \"react-file-base64\";\r\nimport { createPost, hideModal } from \"../../redux/actions\";\r\nexport default function CreatePostModal() {\r\n\tconst [data, setData] = useState({\r\n\t\ttitle: \"\",\r\n\t\tcontent: \"\",\r\n\t\tattachment: \"\",\r\n\t});\r\n\tconst classes = useStyles();\r\n\tconst { isShow } = useSelector(modalState$);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onClose = useCallback(() => {\r\n\t\tdispatch(hideModal());\r\n\t\tsetData({\r\n\t\t\ttitle: \"\",\r\n\t\t\tcontent: \"\",\r\n\t\t\tattachment: \"\",\r\n\t\t});\r\n\t}, [dispatch]);\r\n\r\n\t// const onSubmit = useCallback(() => {\r\n\t// \tconsole.log({data});\r\n\t// \t// có thể log ra ở đây do đã cập nhật data dựa trên dependencies array\r\n\t// \t// chỉ log state ra khi trong use effect hoặc usecallback\r\n\t// }, [data]);\r\n\r\n\tconst onSubmit = useCallback(() => {\r\n\t\tconsole.log(\"🚀 ~ file: index.js ~ line 30 ~ onSubmit ~ data\", data);\r\n\t\tdispatch(createPost.createPostRequest(data));\r\n\t\t// có thể log ra ở đây do đã cập nhật data dựa trên dependencies array\r\n\t\t// chỉ log state ra khi trong use effect hoặc usecallback\r\n\t}, [data, dispatch]);\r\n\r\n\tconst body = (\r\n\t\t<div className={classes.paper} id=\"simple-modal-title\">\r\n\t\t\t<h2>Create New Post</h2>\r\n\t\t\t<form noValidate autoComplete=\"off\" className={classes.form} action=\"\">\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tclassName={classes.title}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Title\"\r\n\t\t\t\t\tvalue={data.title}\r\n\t\t\t\t\tonChange={(e) => setData({ ...data, title: e.target.value })}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextareaAutosize\r\n\t\t\t\t\tminRows={10}\r\n\t\t\t\t\tmaxRows={15}\r\n\t\t\t\t\tplaceholder=\"Content...\"\r\n\t\t\t\t\tvalue={data.content}\r\n\t\t\t\t\tonChange={(e) => setData({ ...data, content: e.target.value })}\r\n\t\t\t\t></TextareaAutosize>\r\n\t\t\t\t<FileBase64\r\n\t\t\t\t\taccept=\"image/\"\r\n\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\tonDone={({ base64 }) => setData({ ...data, attachment: base64 })}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={classes.footer}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tonClick={onSubmit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Modal open={isShow} onClose={onClose}>\r\n\t\t\t\t{body}\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { Container, Fab } from \"@material-ui/core\";\r\nimport Header from \"../components/Header\";\r\nimport PostList from \"../components/PostList\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport useStyles from \"./styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showModal } from \"../redux/actions\";\r\nimport CreatePostModal from \"../components/CreatePostModal\";\r\nexport default function HomePage() {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst openCreatePostModal = useCallback(() => {\r\n\t\tdispatch(showModal());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Container maxWidth=\"lg\" className=\"\">\r\n\t\t\t<Header />\r\n\t\t\t<PostList />\r\n\t\t\t<CreatePostModal />\r\n\t\t\t<Fab\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tclassName={classes.fab}\r\n\t\t\t\tonClick={openCreatePostModal}\r\n\t\t\t>\r\n\t\t\t\t<AddIcon />\r\n\t\t\t</Fab>\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport * as actions from \"./redux/actions\";\r\n\r\nfunction App() {\r\n\treturn <HomePage />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst URL = \"http://localhost:5000\";\r\n\r\nexport const fetchPosts = () => axios.get(`${URL}/posts`);\r\nexport const createPost = (payload) => axios.post(`${URL}/posts`, payload);\r\nexport const updatePost = (payload) =>\r\n\taxios.post(`${URL}/posts/update`, payload);\r\n","import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport * as api from \"../../apis\";\r\nimport * as actions from \"../actions\";\r\n\r\nfunction* fetchPostsSaga(action) {\r\n\ttry {\r\n\t\tconst posts = yield call(api.fetchPosts);\r\n\t\tconsole.log(\r\n\t\t\t\"🚀 ~ file: index.js ~ line 7 ~ function*fetchPostSaga ~ posts\",\r\n\t\t\tposts\r\n\t\t);\r\n\t\tyield put(actions.getPosts.getPostsSuccess(posts.data));\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\tyield put(actions.getPosts.getPostsFailure(err));\r\n\t}\r\n}\r\n\r\nfunction* createPostSaga(action) {\r\n\ttry {\r\n\t\tconst post = yield call(api.createPost, action.payload);\r\n\t\tyield put(actions.createPost.createPostSuccess(post.data));\r\n\t\tyield put(actions.hideModal());\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\tyield put(actions.createPost.createPostFailure(err));\r\n\t}\r\n}\r\n\r\nfunction* updatePostSaga(action) {\r\n\ttry {\r\n\t\tconst updatedPost = yield call(api.updatePost, action.payload);\r\n\t\tyield put(actions.updatePost.updatePostSuccess(updatedPost.data));\r\n\t\tyield put(actions.hideModal());\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\tyield put(actions.updatePost.updatePostFailure(err));\r\n\t}\r\n}\r\n\r\nfunction* mySaga() {\r\n\tyield takeLatest(actions.getPosts.getPostsRequest, fetchPostsSaga);\r\n\tyield takeLatest(actions.createPost.createPostRequest, createPostSaga);\r\n\tyield takeLatest(actions.updatePost.updatePostRequest, updatePostSaga);\r\n}\r\n// generator function es6\r\nexport default mySaga;\r\n","export const INIT_STATE = {\r\n\tposts: {\r\n\t\tisLoading: false,\r\n\t\tdata: [],\r\n\t},\r\n\tmodal: {\r\n\t\tisShow: false,\r\n\t},\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport posts from \"./posts\";\r\nimport modal from \"./modal\";\r\n\r\nexport default combineReducers({ posts, modal });\r\n","import { INIT_STATE } from \"../../constants\";\r\nimport { createPost, getPosts, getType, updatePost } from \"../actions\";\r\nexport default function postsReducer(state = INIT_STATE.posts, action) {\r\n\tswitch (action.type) {\r\n\t\t// getPosts\r\n\t\tcase getType(getPosts.getPostsRequest): //case: \"getPostsRequest\"\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: true,\r\n\t\t\t};\r\n\t\tcase getType(getPosts.getPostsSuccess): //case: \"getPostsSucces\"\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tcase getType(getPosts.getPostsFailure): //case: \"getPostsFailure\"\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\r\n\t\t// createPost\r\n\t\tcase getType(createPost.createPostSuccess):\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: [...state.data, action.payload],\r\n\t\t\t};\r\n\r\n\t\t// updatePost\r\n\t\tcase getType(updatePost.updatePostSuccess):\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: state.data.map((post) =>\r\n\t\t\t\t\tpost._id === action.payload._id ? action.payload : post\r\n\t\t\t\t),\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { INIT_STATE } from \"../../constants\";\r\nimport { showModal, getType, hideModal } from \"../actions\";\r\nexport default function modalReducer(state = INIT_STATE.modal, action) {\r\n\tswitch (action.type) {\r\n\t\tcase getType(showModal):\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisShow: true,\r\n\t\t\t};\r\n\t\tcase getType(hideModal):\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisShow: false,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport mySaga from \"./redux/sagas\";\r\nimport reducers from \"./redux/reducers\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(mySaga);\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}